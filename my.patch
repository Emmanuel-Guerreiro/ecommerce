diff --git a/pom.xml b/pom.xml
index c489d68..fd86f10 100644
--- a/pom.xml
+++ b/pom.xml
@@ -11,7 +11,7 @@
     <groupId>com.example</groupId>
     <artifactId>persona</artifactId>
     <version>0.0.1-SNAPSHOT</version>
-    <name>eccomerce reciente</name>
+    <name>persona</name>
     <description>persona</description>
     <properties>
         <java.version>11</java.version>
@@ -74,12 +74,6 @@
             <artifactId>modelmapper</artifactId>
             <version>3.0.0</version>
         </dependency>
-        <dependency>
-            <groupId>jakarta.platform</groupId>
-            <artifactId>jakarta.jakartaee-api</artifactId>
-            <version>9.0.0</version>
-            <type>jar</type>
-        </dependency>
     </dependencies>
 
     <build>
diff --git a/src/main/java/com/example/ecommerce/Frontend/FrontendController.java b/src/main/java/com/example/ecommerce/Frontend/FrontendController.java
index c6dc947..0d1fd66 100644
--- a/src/main/java/com/example/ecommerce/Frontend/FrontendController.java
+++ b/src/main/java/com/example/ecommerce/Frontend/FrontendController.java
@@ -10,7 +10,6 @@ import org.springframework.web.bind.annotation.ModelAttribute;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestParam;
-import org.springframework.web.multipart.MultipartFile;
 
 import com.example.ecommerce.Categoria.Categoria;
 import com.example.ecommerce.Categoria.CategoriaServiceImpl;
@@ -19,8 +18,6 @@ import com.example.ecommerce.Frontend.DTO.DTOProductoUI;
 import com.example.ecommerce.Producto.Producto;
 import com.example.ecommerce.Producto.ProductoServiceImpl;
 import com.example.ecommerce.Producto.DTO.DTOCreateProducto;
-import jakarta.ws.rs.QueryParam;
-import org.springframework.web.bind.annotation.ResponseBody;
 
 @Controller
 public class FrontendController {
@@ -129,10 +126,13 @@ public class FrontendController {
     @PostMapping("/nuevo")
     public String saveProd(
             Model model,
-            @RequestParam("archivo") MultipartFile archivo,
             @ModelAttribute("producto") DTOCreateProducto producto) {
         try {
+            System.out.println(producto);
+            System.out.println("[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]");
+            // System.out.println(archivo);
 
+            System.out.println(producto.getImagen().getOriginalFilename());
             Producto nuevo = productoService.save(producto);
 
             List<Categoria> categorias = categoriaService.findAll();
@@ -146,18 +146,4 @@ public class FrontendController {
             return "error";
         }
     }
-    
-    
-    @GetMapping("/search")
-    public String findProductsByFilter(Model model, @QueryParam("filter") String filter) {
-        
-        try{
-            List<Producto> productos = this.productoService.findByFilter(filter);
-            model.addAttribute("productos", productos);
-            return "index";
-        }
-        catch(Exception error){
-            return "Se ha producido un error";
-        }          
-    }
 }
diff --git a/src/main/java/com/example/ecommerce/ImageStorage/IndireccionImageStorage.java b/src/main/java/com/example/ecommerce/ImageStorage/IndireccionImageStorage.java
index 532cf37..da16f83 100644
--- a/src/main/java/com/example/ecommerce/ImageStorage/IndireccionImageStorage.java
+++ b/src/main/java/com/example/ecommerce/ImageStorage/IndireccionImageStorage.java
@@ -1,31 +1,62 @@
 package com.example.ecommerce.ImageStorage;
 
-import java.nio.file.Files;
-import java.nio.file.Path;
-import java.nio.file.Paths;
-
+import org.springframework.boot.web.client.RestTemplateBuilder;
 import org.springframework.context.annotation.Scope;
+import org.springframework.http.ContentDisposition;
+import org.springframework.http.HttpEntity;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpMethod;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
+import org.springframework.util.LinkedMultiValueMap;
+import org.springframework.util.MultiValueMap;
+import org.springframework.web.client.HttpClientErrorException;
+import org.springframework.web.client.RestTemplate;
 import org.springframework.web.multipart.MultipartFile;
 
 @Service
 @Scope("singleton")
 public class IndireccionImageStorage {
 
+    // Todo: refactorizar - Esta muy shady
     // Uploads an image and returns it url in the storage
-    public String uploadImage(MultipartFile file) throws java.io.IOException {
-        StringBuilder fileNames = new StringBuilder();
-
-        // Se asegura que exista el directorio antes de guardar la imagen
-        // Files.createDirectories(Paths.get("/tmp/images-taller"));
-
-        Path fileNameAndPath = Paths.get("/tmp", file.getOriginalFilename());
-        fileNames.append(file.getOriginalFilename());
-
-        System.out.println("0000000000");
-        Files.write(fileNameAndPath, file.getBytes());
-
-        return fileNameAndPath.toString();
+    public String uploadImage(MultipartFile file, String nombre) throws Exception {
+        HttpHeaders headers = new HttpHeaders();
+        headers.setContentType(MediaType.MULTIPART_FORM_DATA);
+
+        // This nested HttpEntiy is important to create the correct
+        // Content-Disposition entry with metadata "name" and "filename"
+        MultiValueMap<String, String> fileMap = new LinkedMultiValueMap<>();
+        ContentDisposition contentDisposition = ContentDisposition
+                .builder("form-data")
+                .name("file")
+                .filename(nombre)
+                .build();
+        fileMap.add(HttpHeaders.CONTENT_DISPOSITION, contentDisposition.toString());
+
+        byte[] someByteArray = file.getBytes();
+
+        HttpEntity<byte[]> fileEntity = new HttpEntity<>(someByteArray, fileMap);
+
+        MultiValueMap<String, Object> body = new LinkedMultiValueMap<>();
+        body.add("file", fileEntity);
+        String serverUrl = "https://upload-image-taller-programaci.herokuapp.com/upload-image";
+        HttpEntity<MultiValueMap<String, Object>> requestEntity = new HttpEntity<>(body, headers);
+        try {
+
+            RestTemplate restTemplate = new RestTemplateBuilder().build();
+            ResponseEntity<String> response = restTemplate.exchange(
+                    serverUrl,
+                    HttpMethod.POST,
+                    requestEntity,
+                    String.class);
+            return response.getBody();
+
+        } catch (HttpClientErrorException e) {
+            e.printStackTrace();
+        }
+
+        return "";
     }
-
 }
\ No newline at end of file
diff --git a/src/main/java/com/example/ecommerce/Producto/DTO/DTOCreateProducto.java b/src/main/java/com/example/ecommerce/Producto/DTO/DTOCreateProducto.java
index 2cec736..467d443 100644
--- a/src/main/java/com/example/ecommerce/Producto/DTO/DTOCreateProducto.java
+++ b/src/main/java/com/example/ecommerce/Producto/DTO/DTOCreateProducto.java
@@ -1,5 +1,7 @@
 package com.example.ecommerce.Producto.DTO;
 
+import org.springframework.web.multipart.MultipartFile;
+
 import lombok.Getter;
 import lombok.Setter;
 
@@ -10,7 +12,7 @@ public class DTOCreateProducto {
     private String nombre;
     private String categoria;
     private int stock;
-    // private MultipartFile imagen;
+    private MultipartFile imagen;
 
     @Override
     public String toString() {
diff --git a/src/main/java/com/example/ecommerce/Producto/Producto.java b/src/main/java/com/example/ecommerce/Producto/Producto.java
index 7bb151b..1eaaf01 100644
--- a/src/main/java/com/example/ecommerce/Producto/Producto.java
+++ b/src/main/java/com/example/ecommerce/Producto/Producto.java
@@ -16,7 +16,7 @@ import lombok.NoArgsConstructor;
 import lombok.Setter;
 
 @Entity
-@Table(name = "producto")
+@Table(name = "productos")
 @Setter
 @Getter
 @NoArgsConstructor
diff --git a/src/main/java/com/example/ecommerce/Producto/ProductoControllerImpl.java b/src/main/java/com/example/ecommerce/Producto/ProductoControllerImpl.java
index 93bb0d7..431c5d2 100644
--- a/src/main/java/com/example/ecommerce/Producto/ProductoControllerImpl.java
+++ b/src/main/java/com/example/ecommerce/Producto/ProductoControllerImpl.java
@@ -21,9 +21,6 @@ public class ProductoControllerImpl
         extends BaseControllerImpl<Producto, Long, ProductoServiceImpl>
         implements ProductoController {
 
-    @Autowired
-    public ProductoService productoServ;
-
     @Autowired
     public ProductoControllerImpl(ProductoServiceImpl service) {
         super(service);
@@ -47,5 +44,4 @@ public class ProductoControllerImpl
         System.out.println("*****************************");
         return 1;
     }
-
 }
diff --git a/src/main/java/com/example/ecommerce/Producto/ProductoRepository.java b/src/main/java/com/example/ecommerce/Producto/ProductoRepository.java
index ea28cc7..70b9779 100644
--- a/src/main/java/com/example/ecommerce/Producto/ProductoRepository.java
+++ b/src/main/java/com/example/ecommerce/Producto/ProductoRepository.java
@@ -3,17 +3,10 @@ package com.example.ecommerce.Producto;
 import java.util.List;
 
 import com.example.ecommerce.Base.BaseRepository;
-import org.springframework.data.jpa.repository.Query;
-import org.springframework.data.repository.query.Param;
 
 public interface ProductoRepository extends BaseRepository<Producto, Long> {
     @Override
     List<Producto> findAll();
 
     List<Producto> findByCateogriaId(Long id);
-    
-    
-    @Query( value = "select * from producto p where p.nombre like %:filter% " ,
-    nativeQuery = true)
-    List<Producto> findByFilter(@Param("filter") String filter);
 }
diff --git a/src/main/java/com/example/ecommerce/Producto/ProductoService.java b/src/main/java/com/example/ecommerce/Producto/ProductoService.java
index 7f246c5..aa8383b 100644
--- a/src/main/java/com/example/ecommerce/Producto/ProductoService.java
+++ b/src/main/java/com/example/ecommerce/Producto/ProductoService.java
@@ -11,6 +11,4 @@ public interface ProductoService extends BaseService<Producto, Long> {
     public Producto save(DTOCreateProducto producto_nuevo) throws Exception;
 
     public List<Producto> findSimilar(Categoria c);
-    
-    public List<Producto> findByFilter(String filter);
 }
diff --git a/src/main/java/com/example/ecommerce/Producto/ProductoServiceImpl.java b/src/main/java/com/example/ecommerce/Producto/ProductoServiceImpl.java
index a4a5343..b64b486 100644
--- a/src/main/java/com/example/ecommerce/Producto/ProductoServiceImpl.java
+++ b/src/main/java/com/example/ecommerce/Producto/ProductoServiceImpl.java
@@ -9,15 +9,13 @@ import org.springframework.stereotype.Service;
 import com.example.ecommerce.Base.BaseServiceImpl;
 import com.example.ecommerce.Categoria.Categoria;
 import com.example.ecommerce.Categoria.CategoriaServiceImpl;
+import com.example.ecommerce.ImageStorage.IndireccionImageStorage;
 import com.example.ecommerce.Producto.DTO.DTOCreateProducto;
 
 @Service
 public class ProductoServiceImpl extends BaseServiceImpl<Producto, Long, ProductoRepository>
         implements ProductoService {
-
     CategoriaServiceImpl categoriaService;
-    @Autowired
-    public ProductoRepository repo;
 
     @Autowired
     public ProductoServiceImpl(ProductoRepository repository, CategoriaServiceImpl categoriaService) {
@@ -29,18 +27,20 @@ public class ProductoServiceImpl extends BaseServiceImpl<Producto, Long, Product
     @Override
     public Producto save(DTOCreateProducto producto_nuevo) throws Exception {
         try {
+            // Convierto los campos basicos del dto a objeto
             ModelMapper mapper = new ModelMapper();
-            System.out.println(producto_nuevo.toString());
             Producto producto = mapper.map(producto_nuevo, Producto.class);
 
+            // Cargo la categoria (Me aseguro que exista o la creo)
             Categoria categoria = categoriaService.findByNameOrCreate(producto_nuevo.getCategoria());
             producto.setCateogria(categoria);
 
-            // System.out.println("-------------------Debugeando---------------------");
-            // IndireccionImageStorage storage = new IndireccionImageStorage();
-            // String direccionImg = storage.uploadImage(producto_nuevo.getImagen());
-            // System.out.println("-------------------Debugeando---------------------");
-            // producto.setImagen(direccionImg);
+            // La imagen se va a un microservicio de nodejs y me devuelve la url de un
+            // storage de firebase
+            IndireccionImageStorage storage = new IndireccionImageStorage();
+            String direccionImg = storage.uploadImage(producto_nuevo.getImagen(), producto.getNombre());
+            producto.setImagen(direccionImg);
+
             return repository.save(producto);
         } catch (Exception e) {
             throw new Exception();
@@ -63,9 +63,4 @@ public class ProductoServiceImpl extends BaseServiceImpl<Producto, Long, Product
 
         return similares;
     }
-
-    @Override
-    public List<Producto> findByFilter(String filter) {
-        return this.repo.findByFilter(filter);
-    }
 }
diff --git a/src/main/java/config/AppConfig.java b/src/main/java/config/AppConfig.java
index 4db51d1..2cb50ad 100644
--- a/src/main/java/config/AppConfig.java
+++ b/src/main/java/config/AppConfig.java
@@ -1,13 +1,19 @@
 package config;
 
 import org.springframework.context.annotation.Configuration;
+import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
 
 @Configuration
 public class AppConfig {
-    // Todo: Descomentar cuando se llegue a usar los dtos
+    @Configuration
+    public class ImagenConfiguration implements WebMvcConfigurer {
 
-    // @Bean
-    // public ModelMapper modelMapper() {
-    // return new ModelMapper();
-    // }
+        @Override
+        public void addResourceHandlers(ResourceHandlerRegistry registry) {
+            WebMvcConfigurer.super.addResourceHandlers(registry);
+            registry.addResourceHandler("/imagenes/**").addResourceLocations("/home/emma/Facultad/imagenes");
+        }
+
+    }
 }
\ No newline at end of file
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
index 4d1710c..713370a 100644
--- a/src/main/resources/application.properties
+++ b/src/main/resources/application.properties
@@ -1,12 +1,12 @@
 spring.datasource.url=jdbc:mysql://localhost:3306/database?serverTimezone=UTC
-spring.datasource.username=root
-spring.datasource.password=dbamarcio
+spring.datasource.username=user
+spring.datasource.password=password
 spring.jpa.show-sql=true
 spring.jpa.hibernate.ddl-auto=update
 spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
 #Variable de entorno
 server.port=9000
 
-#Tama\u00c3\u00b1os de imagen
+#Tamaños de imagen
 spring.servlet.multipart.max-file-size=15MB
 spring.servlet.multipart.max-request-size=16MB
\ No newline at end of file
diff --git a/src/main/resources/static/styles/estilos.css b/src/main/resources/static/styles/estilos.css
index 3bb50b6..02d7e76 100644
--- a/src/main/resources/static/styles/estilos.css
+++ b/src/main/resources/static/styles/estilos.css
@@ -10,7 +10,7 @@ body {
 }
 .navbar {
   background-color: black;
-  border-bottom: 1px solid rgb(255, 255, 255);
+  border-bottom: 1px solid red;
 }
 a {
   color: black;
@@ -24,9 +24,3 @@ a {
 .table-borderless > thead > tr > th {
   border: none;
 }
-.pt-4{
-  padding-top: 0% !important;
-}
-footer{
-  background-color: lightgray;
-}
\ No newline at end of file
diff --git a/src/main/resources/templates/index.html b/src/main/resources/templates/index.html
index b3a9564..c7afb07 100644
--- a/src/main/resources/templates/index.html
+++ b/src/main/resources/templates/index.html
@@ -8,8 +8,7 @@
       name="viewport"
       content="width=device-width, initial-scale=1, shrink-to-fit=no"
     />
-    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
-    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
+
     <!-- Bootstrap CSS v5.2.1 -->
 
     <link
@@ -53,12 +52,45 @@
       <div class="carousel-inner" role="listbox">
         <!--First slide-->
         <div class="carousel-item active">
-            <div style="height: 45vh">
-         
-              <img style="height:45vh; width:100vw" src="https://img.freepik.com/foto-gratis/tienda-ropa-tienda-ropa-perchas-tienda-boutique-moderna_1150-8886.jpg"> 
-             
-            
-       
+          <div
+            class="view"
+            style="
+              background-image: url('https://images.pexels.com/photos/2027490/pexels-photo-2027490.jpeg?cs=srgb&dl=pexels-wesley-souza-2027490.jpg&fm=jpg');
+              background-repeat: no-repeat;
+              background-size: cover;
+            "
+          >
+            <!-- Mask & flexbox options-->
+            <div
+              class="mask rgba-black-strong d-flex justify-content-center align-items-center"
+            >
+              <!-- Content -->
+              <div class="text-center white-text mx-5 wow fadeIn">
+                <h1 class="mb-4">
+                  <strong>Learn Bootstrap 4 with MDB</strong>
+                </h1>
+
+                <p>
+                  <strong>Best & free guide of responsive web design</strong>
+                </p>
+
+                <p class="mb-4 d-none d-md-block">
+                  <strong
+                    >The most comprehensive tutorial for the Bootstrap 4. Loved
+                    by over 500 000 users. Video and written versions available.
+                    Create your own, stunning website.</strong
+                  >
+                </p>
+
+                <a
+                  target="_blank"
+                  href="https://mdbootstrap.com/education/bootstrap/"
+                  class="btn btn-outline-white btn-lg"
+                  >Start free tutorial
+                  <i class="fas fa-graduation-cap ml-2"></i>
+                </a>
+              </div>
+              <!-- Content -->
             </div>
             <!-- Mask & flexbox options-->
           </div>
@@ -75,6 +107,39 @@
               background-size: cover;
             "
           >
+            <!-- Mask & flexbox options-->
+            <div
+              class="mask rgba-black-strong d-flex justify-content-center align-items-center"
+            >
+              <!-- Content -->
+              <div class="text-center white-text mx-5 wow fadeIn">
+                <h1 class="mb-4">
+                  <strong>Learn Bootstrap 4 with MDB</strong>
+                </h1>
+
+                <p>
+                  <strong>Best & free guide of responsive web design</strong>
+                </p>
+
+                <p class="mb-4 d-none d-md-block">
+                  <strong
+                    >The most comprehensive tutorial for the Bootstrap 4. Loved
+                    by over 500 000 users. Video and written versions available.
+                    Create your own, stunning website.</strong
+                  >
+                </p>
+
+                <a
+                  target="_blank"
+                  href="https://mdbootstrap.com/education/bootstrap/"
+                  class="btn btn-outline-white btn-lg"
+                  >Start free tutorial
+                  <i class="fas fa-graduation-cap ml-2"></i>
+                </a>
+              </div>
+              <!-- Content -->
+            </div>
+            <!-- Mask & flexbox options-->
           </div>
         </div>
         <!--/Second slide-->
@@ -90,7 +155,39 @@
             "
           >
             <!-- Mask & flexbox options-->
-            
+            <div
+              class="mask rgba-black-strong d-flex justify-content-center align-items-center"
+            >
+              <!-- Content -->
+              <div class="text-center white-text mx-5 wow fadeIn">
+                <h1 class="mb-4">
+                  <strong>Learn Bootstrap 4 with MDB</strong>
+                </h1>
+
+                <p>
+                  <strong>Best & free guide of responsive web design</strong>
+                </p>
+
+                <p class="mb-4 d-none d-md-block">
+                  <strong
+                    >The most comprehensive tutorial for the Bootstrap 4. Loved
+                    by over 500 000 users. Video and written versions available.
+                    Create your own, stunning website.</strong
+                  >
+                </p>
+
+                <a
+                  target="_blank"
+                  href="https://mdbootstrap.com/education/bootstrap/"
+                  class="btn btn-outline-white btn-lg"
+                  >Start free tutorial
+                  <i class="fas fa-graduation-cap ml-2"></i>
+                </a>
+              </div>
+              <!-- Content -->
+            </div>
+            <!-- Mask & flexbox options-->
+          </div>
         </div>
         <!--/Third slide-->
       </div>
@@ -165,7 +262,7 @@
               </li>
             </ul>
             <!-- Links -->
-        
+
             <form class="form-inline">
               <div class="md-form my-0">
                 <input
@@ -173,27 +270,9 @@
                   type="text"
                   placeholder="Search"
                   aria-label="Search"
-                  id = "txtInput"
                 />
               </div>
             </form>
-
-            <script>
-              $("#txtInput").on('keyup', function (event) {
-                let filter = document.querySelector("#txtInput")
-                console.log(filter.value.length);
-                 if (event.keyCode === 13 && filter.value.length > 0) {
-                  
-                    window.location.href = "http://localhost:9000/search?filter=" + filter.value; 
-                 }
-                 }
-              );
-              /*if (performance.navigation.type == performance.navigation.TYPE_RELOAD) {
-              console.info( "This page is reloaded" );
-              window.location.href= "http://localhost:9000";
-              }*/
-           </script>
-       
           </div>
         </nav>
 
@@ -265,7 +344,26 @@
 
     <!--Footer-->
     <footer class="page-footer text-center font-small mt-4 wow fadeIn">
-   
+      <!--Call to action-->
+      <div class="pt-4">
+        <a
+          class="btn btn-outline-white"
+          href="https://mdbootstrap.com/docs/jquery/getting-started/download/"
+          target="_blank"
+          role="button"
+          >Download MDB
+          <i class="fas fa-download ml-2"></i>
+        </a>
+        <a
+          class="btn btn-outline-white"
+          href="https://mdbootstrap.com/education/bootstrap/"
+          target="_blank"
+          role="button"
+          >Start free tutorial
+          <i class="fas fa-graduation-cap ml-2"></i>
+        </a>
+      </div>
+      <!--/.Call to action-->
 
       <hr class="my-4" />
 
diff --git a/src/main/resources/templates/nuevo.html b/src/main/resources/templates/nuevo.html
index 8cca203..331d545 100644
--- a/src/main/resources/templates/nuevo.html
+++ b/src/main/resources/templates/nuevo.html
@@ -88,6 +88,7 @@
                 class="form-control"
                 id="archivo"
                 name="archivo"
+                th:field="*{imagen}"
               />
             </div>
           </div>
